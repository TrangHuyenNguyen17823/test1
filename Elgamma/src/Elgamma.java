
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.math.BigInteger;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.text.Normalizer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Base64;
import java.util.Collections;
import java.util.Random;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Lucius
 */
public class Elgamma extends javax.swing.JFrame {

    /**
     * Creates new form Elgamma
     */
    public Elgamma() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gLuuFile = new javax.swing.JButton();
        inputK = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        khoaTuDong = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        gBanMa = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mBanRo = new javax.swing.JTextArea();
        mLuuFile = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        inputBeta = new javax.swing.JTextField();
        inputP = new javax.swing.JTextField();
        inputA = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        xoaDuLieu = new javax.swing.JButton();
        gChuyen = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        mBanMa = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        inputAlpha = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        maHoa = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        gBanRo = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        giaiMa = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        TaoKhoa = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        mChuyen = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        gChonFile = new javax.swing.JButton();
        mChonFile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chương trình mã hóa và giải mã Elgramal bằng Java");

        gLuuFile.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        gLuuFile.setText("Lưu file");
        gLuuFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gLuuFileActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setText("Bản rõ");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Bản mã");

        khoaTuDong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        khoaTuDong.setText("Tạo khóa tự động");
        khoaTuDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                khoaTuDongActionPerformed(evt);
            }
        });

        gBanMa.setColumns(20);
        gBanMa.setLineWrap(true);
        gBanMa.setRows(4);
        jScrollPane3.setViewportView(gBanMa);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Bản rõ");

        mBanRo.setColumns(20);
        mBanRo.setLineWrap(true);
        mBanRo.setRows(4);
        jScrollPane1.setViewportView(mBanRo);

        mLuuFile.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mLuuFile.setText("Lưu file");
        mLuuFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mLuuFileMouseClicked(evt);
            }
        });
        mLuuFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mLuuFileActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Beta");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Khóa bí mật");

        inputP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputPActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Alpha");

        xoaDuLieu.setBackground(new java.awt.Color(255, 102, 102));
        xoaDuLieu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        xoaDuLieu.setText("Xóa hết dữ liệu");
        xoaDuLieu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                xoaDuLieuMouseClicked(evt);
            }
        });

        gChuyen.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        gChuyen.setText("Chuyển");
        gChuyen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gChuyenMouseClicked(evt);
            }
        });
        gChuyen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gChuyenActionPerformed(evt);
            }
        });

        mBanMa.setColumns(20);
        mBanMa.setLineWrap(true);
        mBanMa.setRows(4);
        jScrollPane2.setViewportView(mBanMa);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("k");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("Bản mã");

        maHoa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        maHoa.setText("Mã hóa");
        maHoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                maHoaMouseClicked(evt);
            }
        });
        maHoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maHoaActionPerformed(evt);
            }
        });

        gBanRo.setColumns(20);
        gBanRo.setLineWrap(true);
        gBanRo.setRows(4);
        jScrollPane4.setViewportView(gBanRo);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("a");

        giaiMa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        giaiMa.setText("Giải mã");
        giaiMa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                giaiMaMouseClicked(evt);
            }
        });
        giaiMa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giaiMaActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel18.setText("MÃ HÓA VÀ GIẢI MÃ ELGAMMA");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel19.setText("TẠO KHÓA");

        TaoKhoa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        TaoKhoa.setText("Tạo khóa");
        TaoKhoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TaoKhoaActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel20.setText("MÃ HÓA");

        mChuyen.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mChuyen.setText("Chuyển");
        mChuyen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mChuyenMouseClicked(evt);
            }
        });
        mChuyen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mChuyenActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel21.setText("GIẢI MÃ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Khóa công khai");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("p");

        gChonFile.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        gChonFile.setText("Chọn file");
        gChonFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gChonFileMouseClicked(evt);
            }
        });
        gChonFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gChonFileActionPerformed(evt);
            }
        });

        mChonFile.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mChonFile.setText("Chọn file");
        mChonFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mChonFileMouseClicked(evt);
            }
        });
        mChonFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mChonFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(75, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(inputBeta))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(inputAlpha))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(inputP, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(18, 18, Short.MAX_VALUE)
                                    .addComponent(TaoKhoa)
                                    .addGap(42, 42, 42))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(inputA))))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(khoaTuDong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(inputK)
                                .addComponent(xoaDuLieu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(maHoa)
                                    .addGap(26, 26, 26)
                                    .addComponent(mChonFile))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(mChuyen)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(mLuuFile)))))
                    .addComponent(jLabel20)
                    .addComponent(jLabel18))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(giaiMa)
                                .addGap(26, 26, 26)
                                .addComponent(gChonFile))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(gChuyen)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                .addComponent(gLuuFile))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel8))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(inputP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(inputAlpha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(inputA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(maHoa)
                                    .addComponent(mChonFile))))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel14)
                                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(gChuyen)
                                                .addComponent(gLuuFile)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(mChuyen)
                                                .addComponent(mLuuFile)))))
                                .addGap(30, 30, 30))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(TaoKhoa)
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(inputBeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(inputK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(khoaTuDong)
                                .addGap(28, 28, 28)
                                .addComponent(xoaDuLieu))))
                    .addComponent(jLabel12)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(giaiMa)
                            .addComponent(gChonFile))))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private int gcd(int a,int b){
        if(b==0) return a;
        return gcd(b, a%b); 
    }
    
    private boolean checkPrimes (int n){
        if( n<2 ){
            return false;
        }
        for( int i = 2; i<= Math.sqrt(n); i++){
            if( n%i == 0) return false;
        }
        return true;
    }
    
    private BigInteger binhPhuongVaNhan(BigInteger base, BigInteger modulo, BigInteger exponent) {
        return base.modPow(exponent, modulo);
    }

    private byte[] combineByteArrays(byte[] array1, byte[] array2) {
        byte[] combinedArray = new byte[array1.length + array2.length];
        System.arraycopy(array1, 0, combinedArray, 0, array1.length);
        System.arraycopy(array2, 0, combinedArray, array1.length, array2.length);
        return combinedArray;
    }
    
    public long oClitMoRong(long a, long m) {
        long m0 = m;
        long y = 0, x = 1;
        if (m == 1) {
            return 0;
        }

        while (a > 1) {
            long q = a / m;
            long t = m;
            m = a % m;
            a = t;
            t = y;
            y = x - q * y;
            x = t;
        }

        if (x < 0) {
            x += m0;
        }
        return x;
    }
    
    private void TaoKhoa(){
        if(inputP.getText().isEmpty()) 
            JOptionPane.showMessageDialog(this, "Chưa nhập số P!", "Error", JOptionPane.OK_OPTION);
        else if(inputAlpha.getText().isEmpty()) 
            JOptionPane.showMessageDialog(this, "Chưa nhập số Alpha!", "Error", JOptionPane.OK_OPTION);    
        else if(inputA.getText().isEmpty()) 
            JOptionPane.showMessageDialog(this, "Chưa nhập số a!", "Error", JOptionPane.OK_OPTION);
        else{
            int p = Integer.valueOf(inputP.getText().trim());
            int alpha = Integer.valueOf(inputAlpha.getText().trim());
            int a = Integer.valueOf(inputA.getText().trim());
            if(p<1000000||p>1000000000)
                JOptionPane.showMessageDialog(this, "Nhập p >= 10000", "Error", JOptionPane.OK_OPTION);
            else if(!checkPrimes(p))
                 JOptionPane.showMessageDialog(this, "P không là SNT. Vui lòng nhập lại!", "Error", JOptionPane.OK_OPTION);
            else{
                Random rand = new Random();
                int beta = bpvanhan(alpha, a, p);
                int k = rand.nextInt(p - 2);
                inputBeta.setText(String.valueOf(beta));
                inputK.setText(String.valueOf(k));
            }
        }
    }
    public static int sinhnt(int min, int max) {
        Random rand = new Random();
        int a;
        while (true) {
            boolean flag = true;
            a = min + rand.nextInt(max - min + 1);
            for (int i = 2; i <= Math.sqrt(a); ++i) {
                if (a % i == 0) {
                    flag = false;
                    break;
                }
            }
            if (flag) {
                break;
            }
        }
        return a;
    }
    
    private void TaoKhoaTuDong(){
        int max = 1000000000, min = 10000;
        int p = sinhnt(min, max);
        Random rand = new Random();
        int alpha = 1 + rand.nextInt(p - 1);
        int a = 2 + rand.nextInt(p - 4);
        int beta = bpvanhan(alpha, a, p);
        int k = rand.nextInt(p - 2);

        inputP.setText(String.valueOf(p));
        inputAlpha.setText(String.valueOf(alpha));
        inputA.setText(String.valueOf(a));
        inputBeta.setText(String.valueOf(beta));
        inputK.setText(String.valueOf(k));
    }
 
    private void xoa_dl(){
        // Hiển thị hộp thoại thông báo khi ấn nút "Xóa hết dữ liệu"
        int option = JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa hết dữ liệu không?", "Xác nhận xóa", JOptionPane.YES_NO_CANCEL_OPTION);
        if (option == JOptionPane.YES_OPTION) {
            // Người dùng chọn "Có"
            String t ="";
            inputP.setText(t);
            inputAlpha.setText(t);
            inputA.setText(t);
            inputBeta.setText(t);
            inputK.setText(t);
            mBanRo.setText(t);
            mBanMa.setText(t);
            gBanMa.setText(t);
            gBanRo.setText(t);
        }
    }
    
    private void mChuyen(){
        String mbanma = this.mBanMa.getText().toString();
        gBanMa.setText(mbanma);
    }
    
    private void gChuyen(){
        String gbanro = this.gBanRo.getText().toString();
        mBanRo.setText(gbanro);
    }
    
    private void mLuuFile(){
    JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Save File");
    fileChooser.setFileFilter(new FileNameExtensionFilter("Text Files (*.txt)", "txt"));

    int userSelection = fileChooser.showSaveDialog(this);
    if (userSelection == JFileChooser.APPROVE_OPTION) {
        File file = fileChooser.getSelectedFile();
        FileFilter selectedFilter = fileChooser.getFileFilter();

        String filePath = file.getAbsolutePath();
        String fileExtension = "";

        // Kiểm tra phần mở rộng của file
        if (selectedFilter instanceof FileNameExtensionFilter) {
            String[] extensions = ((FileNameExtensionFilter) selectedFilter).getExtensions();
            if (extensions.length > 0) {
                fileExtension = extensions[0];
                filePath = filePath + "." + fileExtension;
            }
        }

        try {
            if ("txt".equalsIgnoreCase(fileExtension)) {
                // Lưu dưới định dạng .txt
                try (BufferedWriter writer = new BufferedWriter(new FileWriter(filePath))) {
                    String text = mBanMa.getText();
                    writer.write(text);
                    writer.close();
                    JOptionPane.showMessageDialog(this, "File saved successfully.");
                }
            } 
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error saving file.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }
    private void gLuuFile(){
       JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Save File");
    fileChooser.setFileFilter(new FileNameExtensionFilter("Text Files (*.txt)", "txt"));

    int userSelection = fileChooser.showSaveDialog(this);
    if (userSelection == JFileChooser.APPROVE_OPTION) {
        File file = fileChooser.getSelectedFile();
        FileFilter selectedFilter = fileChooser.getFileFilter();

        String filePath = file.getAbsolutePath();
        String fileExtension = "";

        // Kiểm tra phần mở rộng của file
        if (selectedFilter instanceof FileNameExtensionFilter) {
            String[] extensions = ((FileNameExtensionFilter) selectedFilter).getExtensions();
            if (extensions.length > 0) {
                fileExtension = extensions[0];
                filePath = filePath + "." + fileExtension;
            }
        }

        try {
            if ("txt".equalsIgnoreCase(fileExtension)) {
                // Lưu dưới định dạng .txt
                try (BufferedWriter writer = new BufferedWriter(new FileWriter(filePath))) {
                    String text = gBanRo.getText();
                    writer.write(text);
                    writer.close();
                    JOptionPane.showMessageDialog(this, "File saved successfully.");
                }
            } 
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error saving file.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }
    
    private int modInverse(int a, int m) {
        BigInteger bigA = BigInteger.valueOf(a);
        BigInteger bigM = BigInteger.valueOf(m);

        BigInteger result = bigA.modInverse(bigM);
        return result.intValue();
    }
    
     
    private static int bpvanhan(long alpha, int k, int p) {
        BigInteger bigAlpha = BigInteger.valueOf(alpha);
        BigInteger bigK = BigInteger.valueOf(k);
        BigInteger bigP = BigInteger.valueOf(p);

        BigInteger result = bigAlpha.modPow(bigK, bigP);
        return result.intValue();
    }
    
    private String getFileExtension(String filePath) {
    int dotIndex = filePath.lastIndexOf(".");
    if (dotIndex > 0 && dotIndex < filePath.length() - 1) {
        return filePath.substring(dotIndex + 1);
    }
    return "";
    }
     
    private void gLuuFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gLuuFileActionPerformed
        // TODO add your handling code here:
        gLuuFile();
    }//GEN-LAST:event_gLuuFileActionPerformed

    private void khoaTuDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_khoaTuDongActionPerformed
        // TODO add your handling code here:
        TaoKhoaTuDong();
    }//GEN-LAST:event_khoaTuDongActionPerformed

    private void mLuuFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mLuuFileMouseClicked
        // TODO add your handling code here:
        mLuuFile();
    }//GEN-LAST:event_mLuuFileMouseClicked

    private void mLuuFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mLuuFileActionPerformed
        // TODO add your handling code here:
        mLuuFile();
    }//GEN-LAST:event_mLuuFileActionPerformed

    private void xoaDuLieuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xoaDuLieuMouseClicked
        // TODO add your handling code here:
        xoa_dl();
    }//GEN-LAST:event_xoaDuLieuMouseClicked

    private void gChuyenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gChuyenMouseClicked

    }//GEN-LAST:event_gChuyenMouseClicked

    private void gChuyenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gChuyenActionPerformed
        // TODO add your handling code here:
        gChuyen();
    }//GEN-LAST:event_gChuyenActionPerformed

    private void maHoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_maHoaMouseClicked

    }//GEN-LAST:event_maHoaMouseClicked

    private void maHoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maHoaActionPerformed
        // TODO add your handling code here:
        if (mBanRo.getText().isEmpty())
            JOptionPane.showMessageDialog(this, "Không có thông điệp cần mã hóa!", "Error", JOptionPane.OK_OPTION);
        else {
            if (inputP.getText().isEmpty() || inputAlpha.getText().isEmpty() || inputBeta.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Lỗi tạo khóa!", "Error", JOptionPane.OK_OPTION);
            } else {
                Random random = new Random();
                int p = Integer.valueOf(inputP.getText().trim());
                int alpha = Integer.valueOf(inputAlpha.getText().trim());
                int beta = Integer.valueOf(inputBeta.getText().trim());
                int k = Integer.valueOf(inputK.getText().trim());
                
                BigInteger bigP = BigInteger.valueOf(p);
                BigInteger bigAlpha = BigInteger.valueOf(alpha);
                BigInteger bigBeta = BigInteger.valueOf(beta);
                BigInteger bigK = BigInteger.valueOf(k);
                //Tìm y = (y1, y2).
                BigInteger y1 = binhPhuongVaNhan(bigAlpha, bigP, bigK);
                BigInteger y2;
                
                String banRo = mBanRo.getText();
                // chuyển bản rõ sang chuẩn Base-64
                String encodedString = Base64.getEncoder().encodeToString(banRo.getBytes());
//                System.out.println(encodedString);
                
                ArrayList<BigInteger> arr_ban_ma = new ArrayList<>();
                arr_ban_ma.add(y1);
                // tìm y2
                for (int i = 0; i < encodedString.length(); i++) {
                    BigInteger x=BigInteger.valueOf(Integer.valueOf(encodedString.charAt(i)));
                    y2 = (x.multiply(binhPhuongVaNhan(bigBeta, bigP, bigK))).mod(bigP);
                    arr_ban_ma.add(y2);
                }
//                System.out.println(arr_ban_ma);
                //chuyển chuỗi mã hóa sang dạng base64;
                String banMa = "";
                for (int j = 0; j < arr_ban_ma.size(); j++) {
                    // chuyển số về dạng Base_64
                   String base64String = Base64.getEncoder().encodeToString(String.valueOf(arr_ban_ma.get(j)).getBytes());
                   banMa+=base64String+" ";
                }
                mBanMa.setText(banMa.trim());
            }
        }
    }//GEN-LAST:event_maHoaActionPerformed

    private void giaiMaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_giaiMaMouseClicked

    }//GEN-LAST:event_giaiMaMouseClicked

    private void giaiMaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giaiMaActionPerformed
        // TODO add your handling code here:
        String banma=gBanMa.getText().trim();
        ArrayList<String> arr_ban_ma_str = new ArrayList<>();
        String[] words = banma.split("\\s+"); // Tách chuỗi thành mảng các từ

        Collections.addAll(arr_ban_ma_str, words);
        
        ArrayList<Long> arr_ban_ma = new ArrayList<>();
        for(int i=0; i<arr_ban_ma_str.size(); i++){
            // chuyển Từ từ Base_64 về dạng mảng byte
            byte[] decodedBytes = Base64.getDecoder().decode(arr_ban_ma_str.get(i));
            // mảng byte chuyển về chuỗi Acsii  
            String asciiString = new String(decodedBytes);
            // chuỗi acsii chuyển về dạng số
            arr_ban_ma.add(Long.valueOf(asciiString));
        }

        
        String stra = inputA.getText();
        int a = Integer.parseInt(stra);
        String strp = inputP.getText();
        int p = Integer.parseInt(strp);
        String br = "";
        // Thực hiên
        for (int i = 1; i < arr_ban_ma.size(); i++) {
            int s=bpvanhan(arr_ban_ma.get(0), a, p);
            long temp =((arr_ban_ma.get(i) * modInverse(s, p)) % p);
            char c=(char) temp;
            br+=c; // ban ro dang la chữ kiểu chuẩn alphabet
        }
//        System.out.println(br);
//      chuyển về mảng Byte
        byte[] decodedBytes = Base64.getDecoder().decode(br);
        // Từ mảng byte chuyển về mảng chữ
        String decodedString = new String(decodedBytes);
        gBanRo.setText(decodedString);
    }//GEN-LAST:event_giaiMaActionPerformed

    private void TaoKhoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TaoKhoaActionPerformed
        // TODO add your handling code here:
        TaoKhoa();
    }//GEN-LAST:event_TaoKhoaActionPerformed

    private void mChuyenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mChuyenMouseClicked

    }//GEN-LAST:event_mChuyenMouseClicked

    private void mChuyenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mChuyenActionPerformed
        // TODO add your handling code here:
        mChuyen();
    }//GEN-LAST:event_mChuyenActionPerformed

    private void gChonFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gChonFileMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_gChonFileMouseClicked

    private void gChonFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gChonFileActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(this); // Hiển thị hộp thoại cho phép chọn file

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String filePath = selectedFile.getAbsolutePath();
            // Xử lý đường dẫn file đã chọn ở đây

        }
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String filePath = selectedFile.getAbsolutePath();

            // Kiểm tra phần mở rộng của file
            String extension = getFileExtension(filePath);
            System.out.println(filePath);
            if (extension.equals("docx") || extension.equals("txt")) {
                try {
                    // Đọc nội dung của file
                    BufferedReader reader = new BufferedReader(new FileReader(filePath));
                    StringBuilder content = new StringBuilder();
                    String line;

                    while ((line = reader.readLine()) != null) {
                        content.append(line).append("\n");
                    }

                    reader.close();
                    // Hiển thị nội dung file trong JTextArea
                    gBanMa.setText(content.toString().trim());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Chỉ chấp nhận file .docx hoặc .txt.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }}
            //        chonFile();
    }//GEN-LAST:event_gChonFileActionPerformed

    private void mChonFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mChonFileMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_mChonFileMouseClicked

    private void mChonFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mChonFileActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(this); // Hiển thị hộp thoại cho phép chọn file

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String filePath = selectedFile.getAbsolutePath();
            // Xử lý đường dẫn file đã chọn ở đây
        }
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String filePath = selectedFile.getAbsolutePath();

            // Kiểm tra phần mở rộng của file
            String extension = getFileExtension(filePath);
            System.out.println(filePath);
            if (extension.equals("docx") || extension.equals("txt")) {
                try {
                    // Đọc nội dung của file
                    BufferedReader reader = new BufferedReader(new FileReader(filePath));
                    StringBuilder content = new StringBuilder();
                    String line;

                    while ((line = reader.readLine()) != null) {
                        content.append(line).append("\n");
                    }

                    reader.close();
                    // Hiển thị nội dung file trong JTextArea
                    mBanRo.setText(content.toString().trim());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Chỉ chấp nhận file .docx hoặc .txt.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_mChonFileActionPerformed

    private void inputPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Elgamma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Elgamma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Elgamma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Elgamma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Elgamma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton TaoKhoa;
    private javax.swing.JTextArea gBanMa;
    private javax.swing.JTextArea gBanRo;
    private javax.swing.JButton gChonFile;
    private javax.swing.JButton gChuyen;
    private javax.swing.JButton gLuuFile;
    private javax.swing.JButton giaiMa;
    private javax.swing.JTextField inputA;
    private javax.swing.JTextField inputAlpha;
    private javax.swing.JTextField inputBeta;
    private javax.swing.JTextField inputK;
    private javax.swing.JTextField inputP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton khoaTuDong;
    private javax.swing.JTextArea mBanMa;
    private javax.swing.JTextArea mBanRo;
    private javax.swing.JButton mChonFile;
    private javax.swing.JButton mChuyen;
    private javax.swing.JButton mLuuFile;
    private javax.swing.JButton maHoa;
    private javax.swing.JButton xoaDuLieu;
    // End of variables declaration//GEN-END:variables

}
